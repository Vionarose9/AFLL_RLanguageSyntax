Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> nextstmt
Rule 1     nextstmt -> FOR LBRACKET ID IN NUM COLON NUM RBRACKET LFLOWER NEXT statements RFLOWER
Rule 2     nextstmt -> FOR LBRACKET ID IN ID RBRACKET LFLOWER NEXT statements RFLOWER
Rule 3     nextstmt -> FOR LBRACKET ID IN NUM COLON NUM RBRACKET NEXT singleStatement
Rule 4     nextstmt -> FOR LBRACKET ID IN ID RBRACKET NEXT singleStatement
Rule 5     statements -> statements statement
Rule 6     statements -> statement
Rule 7     statement -> list
Rule 8     statement -> nextstmt
Rule 9     statement -> empty
Rule 10    singleStatement -> list
Rule 11    singleStatement -> empty
Rule 12    singleStatement -> nextstmt
Rule 13    list -> ID list
Rule 14    list -> ID
Rule 15    empty -> <empty>

Terminals, with rules where they appear

COLON                : 1 3
FOR                  : 1 2 3 4
ID                   : 1 2 2 3 4 4 13 14
IN                   : 1 2 3 4
LBRACKET             : 1 2 3 4
LFLOWER              : 1 2
NEXT                 : 1 2 3 4
NUM                  : 1 1 3 3
RBRACKET             : 1 2 3 4
RFLOWER              : 1 2
error                : 

Nonterminals, with rules where they appear

empty                : 9 11
list                 : 7 10 13
nextstmt             : 8 12 0
singleStatement      : 3 4
statement            : 5 6
statements           : 1 2 5

Parsing method: LALR

state 0

    (0) S' -> . nextstmt
    (1) nextstmt -> . FOR LBRACKET ID IN NUM COLON NUM RBRACKET LFLOWER NEXT statements RFLOWER
    (2) nextstmt -> . FOR LBRACKET ID IN ID RBRACKET LFLOWER NEXT statements RFLOWER
    (3) nextstmt -> . FOR LBRACKET ID IN NUM COLON NUM RBRACKET NEXT singleStatement
    (4) nextstmt -> . FOR LBRACKET ID IN ID RBRACKET NEXT singleStatement

    FOR             shift and go to state 2

    nextstmt                       shift and go to state 1

state 1

    (0) S' -> nextstmt .



state 2

    (1) nextstmt -> FOR . LBRACKET ID IN NUM COLON NUM RBRACKET LFLOWER NEXT statements RFLOWER
    (2) nextstmt -> FOR . LBRACKET ID IN ID RBRACKET LFLOWER NEXT statements RFLOWER
    (3) nextstmt -> FOR . LBRACKET ID IN NUM COLON NUM RBRACKET NEXT singleStatement
    (4) nextstmt -> FOR . LBRACKET ID IN ID RBRACKET NEXT singleStatement

    LBRACKET        shift and go to state 3


state 3

    (1) nextstmt -> FOR LBRACKET . ID IN NUM COLON NUM RBRACKET LFLOWER NEXT statements RFLOWER
    (2) nextstmt -> FOR LBRACKET . ID IN ID RBRACKET LFLOWER NEXT statements RFLOWER
    (3) nextstmt -> FOR LBRACKET . ID IN NUM COLON NUM RBRACKET NEXT singleStatement
    (4) nextstmt -> FOR LBRACKET . ID IN ID RBRACKET NEXT singleStatement

    ID              shift and go to state 4


state 4

    (1) nextstmt -> FOR LBRACKET ID . IN NUM COLON NUM RBRACKET LFLOWER NEXT statements RFLOWER
    (2) nextstmt -> FOR LBRACKET ID . IN ID RBRACKET LFLOWER NEXT statements RFLOWER
    (3) nextstmt -> FOR LBRACKET ID . IN NUM COLON NUM RBRACKET NEXT singleStatement
    (4) nextstmt -> FOR LBRACKET ID . IN ID RBRACKET NEXT singleStatement

    IN              shift and go to state 5


state 5

    (1) nextstmt -> FOR LBRACKET ID IN . NUM COLON NUM RBRACKET LFLOWER NEXT statements RFLOWER
    (2) nextstmt -> FOR LBRACKET ID IN . ID RBRACKET LFLOWER NEXT statements RFLOWER
    (3) nextstmt -> FOR LBRACKET ID IN . NUM COLON NUM RBRACKET NEXT singleStatement
    (4) nextstmt -> FOR LBRACKET ID IN . ID RBRACKET NEXT singleStatement

    NUM             shift and go to state 7
    ID              shift and go to state 6


state 6

    (2) nextstmt -> FOR LBRACKET ID IN ID . RBRACKET LFLOWER NEXT statements RFLOWER
    (4) nextstmt -> FOR LBRACKET ID IN ID . RBRACKET NEXT singleStatement

    RBRACKET        shift and go to state 8


state 7

    (1) nextstmt -> FOR LBRACKET ID IN NUM . COLON NUM RBRACKET LFLOWER NEXT statements RFLOWER
    (3) nextstmt -> FOR LBRACKET ID IN NUM . COLON NUM RBRACKET NEXT singleStatement

    COLON           shift and go to state 9


state 8

    (2) nextstmt -> FOR LBRACKET ID IN ID RBRACKET . LFLOWER NEXT statements RFLOWER
    (4) nextstmt -> FOR LBRACKET ID IN ID RBRACKET . NEXT singleStatement

    LFLOWER         shift and go to state 10
    NEXT            shift and go to state 11


state 9

    (1) nextstmt -> FOR LBRACKET ID IN NUM COLON . NUM RBRACKET LFLOWER NEXT statements RFLOWER
    (3) nextstmt -> FOR LBRACKET ID IN NUM COLON . NUM RBRACKET NEXT singleStatement

    NUM             shift and go to state 12


state 10

    (2) nextstmt -> FOR LBRACKET ID IN ID RBRACKET LFLOWER . NEXT statements RFLOWER

    NEXT            shift and go to state 13


state 11

    (4) nextstmt -> FOR LBRACKET ID IN ID RBRACKET NEXT . singleStatement
    (10) singleStatement -> . list
    (11) singleStatement -> . empty
    (12) singleStatement -> . nextstmt
    (13) list -> . ID list
    (14) list -> . ID
    (15) empty -> .
    (1) nextstmt -> . FOR LBRACKET ID IN NUM COLON NUM RBRACKET LFLOWER NEXT statements RFLOWER
    (2) nextstmt -> . FOR LBRACKET ID IN ID RBRACKET LFLOWER NEXT statements RFLOWER
    (3) nextstmt -> . FOR LBRACKET ID IN NUM COLON NUM RBRACKET NEXT singleStatement
    (4) nextstmt -> . FOR LBRACKET ID IN ID RBRACKET NEXT singleStatement

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    ID              shift and go to state 14
    $end            reduce using rule 15 (empty -> .)
    RFLOWER         reduce using rule 15 (empty -> .)
    FOR             shift and go to state 2

  ! ID              [ reduce using rule 15 (empty -> .) ]
  ! FOR             [ reduce using rule 15 (empty -> .) ]

    singleStatement                shift and go to state 15
    list                           shift and go to state 16
    empty                          shift and go to state 17
    nextstmt                       shift and go to state 18

state 12

    (1) nextstmt -> FOR LBRACKET ID IN NUM COLON NUM . RBRACKET LFLOWER NEXT statements RFLOWER
    (3) nextstmt -> FOR LBRACKET ID IN NUM COLON NUM . RBRACKET NEXT singleStatement

    RBRACKET        shift and go to state 19


state 13

    (2) nextstmt -> FOR LBRACKET ID IN ID RBRACKET LFLOWER NEXT . statements RFLOWER
    (5) statements -> . statements statement
    (6) statements -> . statement
    (7) statement -> . list
    (8) statement -> . nextstmt
    (9) statement -> . empty
    (13) list -> . ID list
    (14) list -> . ID
    (1) nextstmt -> . FOR LBRACKET ID IN NUM COLON NUM RBRACKET LFLOWER NEXT statements RFLOWER
    (2) nextstmt -> . FOR LBRACKET ID IN ID RBRACKET LFLOWER NEXT statements RFLOWER
    (3) nextstmt -> . FOR LBRACKET ID IN NUM COLON NUM RBRACKET NEXT singleStatement
    (4) nextstmt -> . FOR LBRACKET ID IN ID RBRACKET NEXT singleStatement
    (15) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    ID              shift and go to state 14
    FOR             shift and go to state 2
    RFLOWER         reduce using rule 15 (empty -> .)

  ! ID              [ reduce using rule 15 (empty -> .) ]
  ! FOR             [ reduce using rule 15 (empty -> .) ]

    statements                     shift and go to state 20
    statement                      shift and go to state 21
    list                           shift and go to state 22
    nextstmt                       shift and go to state 23
    empty                          shift and go to state 24

state 14

    (13) list -> ID . list
    (14) list -> ID .
    (13) list -> . ID list
    (14) list -> . ID

  ! shift/reduce conflict for ID resolved as shift
    $end            reduce using rule 14 (list -> ID .)
    RFLOWER         reduce using rule 14 (list -> ID .)
    FOR             reduce using rule 14 (list -> ID .)
    ID              shift and go to state 14

  ! ID              [ reduce using rule 14 (list -> ID .) ]

    list                           shift and go to state 25

state 15

    (4) nextstmt -> FOR LBRACKET ID IN ID RBRACKET NEXT singleStatement .

    $end            reduce using rule 4 (nextstmt -> FOR LBRACKET ID IN ID RBRACKET NEXT singleStatement .)
    RFLOWER         reduce using rule 4 (nextstmt -> FOR LBRACKET ID IN ID RBRACKET NEXT singleStatement .)
    ID              reduce using rule 4 (nextstmt -> FOR LBRACKET ID IN ID RBRACKET NEXT singleStatement .)
    FOR             reduce using rule 4 (nextstmt -> FOR LBRACKET ID IN ID RBRACKET NEXT singleStatement .)


state 16

    (10) singleStatement -> list .

    $end            reduce using rule 10 (singleStatement -> list .)
    RFLOWER         reduce using rule 10 (singleStatement -> list .)
    ID              reduce using rule 10 (singleStatement -> list .)
    FOR             reduce using rule 10 (singleStatement -> list .)


state 17

    (11) singleStatement -> empty .

    $end            reduce using rule 11 (singleStatement -> empty .)
    RFLOWER         reduce using rule 11 (singleStatement -> empty .)
    ID              reduce using rule 11 (singleStatement -> empty .)
    FOR             reduce using rule 11 (singleStatement -> empty .)


state 18

    (12) singleStatement -> nextstmt .

    $end            reduce using rule 12 (singleStatement -> nextstmt .)
    RFLOWER         reduce using rule 12 (singleStatement -> nextstmt .)
    ID              reduce using rule 12 (singleStatement -> nextstmt .)
    FOR             reduce using rule 12 (singleStatement -> nextstmt .)


state 19

    (1) nextstmt -> FOR LBRACKET ID IN NUM COLON NUM RBRACKET . LFLOWER NEXT statements RFLOWER
    (3) nextstmt -> FOR LBRACKET ID IN NUM COLON NUM RBRACKET . NEXT singleStatement

    LFLOWER         shift and go to state 26
    NEXT            shift and go to state 27


state 20

    (2) nextstmt -> FOR LBRACKET ID IN ID RBRACKET LFLOWER NEXT statements . RFLOWER
    (5) statements -> statements . statement
    (7) statement -> . list
    (8) statement -> . nextstmt
    (9) statement -> . empty
    (13) list -> . ID list
    (14) list -> . ID
    (1) nextstmt -> . FOR LBRACKET ID IN NUM COLON NUM RBRACKET LFLOWER NEXT statements RFLOWER
    (2) nextstmt -> . FOR LBRACKET ID IN ID RBRACKET LFLOWER NEXT statements RFLOWER
    (3) nextstmt -> . FOR LBRACKET ID IN NUM COLON NUM RBRACKET NEXT singleStatement
    (4) nextstmt -> . FOR LBRACKET ID IN ID RBRACKET NEXT singleStatement
    (15) empty -> .

  ! shift/reduce conflict for RFLOWER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    RFLOWER         shift and go to state 28
    ID              shift and go to state 14
    FOR             shift and go to state 2

  ! RFLOWER         [ reduce using rule 15 (empty -> .) ]
  ! ID              [ reduce using rule 15 (empty -> .) ]
  ! FOR             [ reduce using rule 15 (empty -> .) ]

    statement                      shift and go to state 29
    list                           shift and go to state 22
    nextstmt                       shift and go to state 23
    empty                          shift and go to state 24

state 21

    (6) statements -> statement .

    RFLOWER         reduce using rule 6 (statements -> statement .)
    ID              reduce using rule 6 (statements -> statement .)
    FOR             reduce using rule 6 (statements -> statement .)


state 22

    (7) statement -> list .

    RFLOWER         reduce using rule 7 (statement -> list .)
    ID              reduce using rule 7 (statement -> list .)
    FOR             reduce using rule 7 (statement -> list .)


state 23

    (8) statement -> nextstmt .

    RFLOWER         reduce using rule 8 (statement -> nextstmt .)
    ID              reduce using rule 8 (statement -> nextstmt .)
    FOR             reduce using rule 8 (statement -> nextstmt .)


state 24

    (9) statement -> empty .

    RFLOWER         reduce using rule 9 (statement -> empty .)
    ID              reduce using rule 9 (statement -> empty .)
    FOR             reduce using rule 9 (statement -> empty .)


state 25

    (13) list -> ID list .

    $end            reduce using rule 13 (list -> ID list .)
    RFLOWER         reduce using rule 13 (list -> ID list .)
    ID              reduce using rule 13 (list -> ID list .)
    FOR             reduce using rule 13 (list -> ID list .)


state 26

    (1) nextstmt -> FOR LBRACKET ID IN NUM COLON NUM RBRACKET LFLOWER . NEXT statements RFLOWER

    NEXT            shift and go to state 30


state 27

    (3) nextstmt -> FOR LBRACKET ID IN NUM COLON NUM RBRACKET NEXT . singleStatement
    (10) singleStatement -> . list
    (11) singleStatement -> . empty
    (12) singleStatement -> . nextstmt
    (13) list -> . ID list
    (14) list -> . ID
    (15) empty -> .
    (1) nextstmt -> . FOR LBRACKET ID IN NUM COLON NUM RBRACKET LFLOWER NEXT statements RFLOWER
    (2) nextstmt -> . FOR LBRACKET ID IN ID RBRACKET LFLOWER NEXT statements RFLOWER
    (3) nextstmt -> . FOR LBRACKET ID IN NUM COLON NUM RBRACKET NEXT singleStatement
    (4) nextstmt -> . FOR LBRACKET ID IN ID RBRACKET NEXT singleStatement

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    ID              shift and go to state 14
    $end            reduce using rule 15 (empty -> .)
    RFLOWER         reduce using rule 15 (empty -> .)
    FOR             shift and go to state 2

  ! ID              [ reduce using rule 15 (empty -> .) ]
  ! FOR             [ reduce using rule 15 (empty -> .) ]

    singleStatement                shift and go to state 31
    list                           shift and go to state 16
    empty                          shift and go to state 17
    nextstmt                       shift and go to state 18

state 28

    (2) nextstmt -> FOR LBRACKET ID IN ID RBRACKET LFLOWER NEXT statements RFLOWER .

    $end            reduce using rule 2 (nextstmt -> FOR LBRACKET ID IN ID RBRACKET LFLOWER NEXT statements RFLOWER .)
    RFLOWER         reduce using rule 2 (nextstmt -> FOR LBRACKET ID IN ID RBRACKET LFLOWER NEXT statements RFLOWER .)
    ID              reduce using rule 2 (nextstmt -> FOR LBRACKET ID IN ID RBRACKET LFLOWER NEXT statements RFLOWER .)
    FOR             reduce using rule 2 (nextstmt -> FOR LBRACKET ID IN ID RBRACKET LFLOWER NEXT statements RFLOWER .)


state 29

    (5) statements -> statements statement .

    RFLOWER         reduce using rule 5 (statements -> statements statement .)
    ID              reduce using rule 5 (statements -> statements statement .)
    FOR             reduce using rule 5 (statements -> statements statement .)


state 30

    (1) nextstmt -> FOR LBRACKET ID IN NUM COLON NUM RBRACKET LFLOWER NEXT . statements RFLOWER
    (5) statements -> . statements statement
    (6) statements -> . statement
    (7) statement -> . list
    (8) statement -> . nextstmt
    (9) statement -> . empty
    (13) list -> . ID list
    (14) list -> . ID
    (1) nextstmt -> . FOR LBRACKET ID IN NUM COLON NUM RBRACKET LFLOWER NEXT statements RFLOWER
    (2) nextstmt -> . FOR LBRACKET ID IN ID RBRACKET LFLOWER NEXT statements RFLOWER
    (3) nextstmt -> . FOR LBRACKET ID IN NUM COLON NUM RBRACKET NEXT singleStatement
    (4) nextstmt -> . FOR LBRACKET ID IN ID RBRACKET NEXT singleStatement
    (15) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    ID              shift and go to state 14
    FOR             shift and go to state 2
    RFLOWER         reduce using rule 15 (empty -> .)

  ! ID              [ reduce using rule 15 (empty -> .) ]
  ! FOR             [ reduce using rule 15 (empty -> .) ]

    statements                     shift and go to state 32
    statement                      shift and go to state 21
    list                           shift and go to state 22
    nextstmt                       shift and go to state 23
    empty                          shift and go to state 24

state 31

    (3) nextstmt -> FOR LBRACKET ID IN NUM COLON NUM RBRACKET NEXT singleStatement .

    $end            reduce using rule 3 (nextstmt -> FOR LBRACKET ID IN NUM COLON NUM RBRACKET NEXT singleStatement .)
    RFLOWER         reduce using rule 3 (nextstmt -> FOR LBRACKET ID IN NUM COLON NUM RBRACKET NEXT singleStatement .)
    ID              reduce using rule 3 (nextstmt -> FOR LBRACKET ID IN NUM COLON NUM RBRACKET NEXT singleStatement .)
    FOR             reduce using rule 3 (nextstmt -> FOR LBRACKET ID IN NUM COLON NUM RBRACKET NEXT singleStatement .)


state 32

    (1) nextstmt -> FOR LBRACKET ID IN NUM COLON NUM RBRACKET LFLOWER NEXT statements . RFLOWER
    (5) statements -> statements . statement
    (7) statement -> . list
    (8) statement -> . nextstmt
    (9) statement -> . empty
    (13) list -> . ID list
    (14) list -> . ID
    (1) nextstmt -> . FOR LBRACKET ID IN NUM COLON NUM RBRACKET LFLOWER NEXT statements RFLOWER
    (2) nextstmt -> . FOR LBRACKET ID IN ID RBRACKET LFLOWER NEXT statements RFLOWER
    (3) nextstmt -> . FOR LBRACKET ID IN NUM COLON NUM RBRACKET NEXT singleStatement
    (4) nextstmt -> . FOR LBRACKET ID IN ID RBRACKET NEXT singleStatement
    (15) empty -> .

  ! shift/reduce conflict for RFLOWER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    RFLOWER         shift and go to state 33
    ID              shift and go to state 14
    FOR             shift and go to state 2

  ! RFLOWER         [ reduce using rule 15 (empty -> .) ]
  ! ID              [ reduce using rule 15 (empty -> .) ]
  ! FOR             [ reduce using rule 15 (empty -> .) ]

    statement                      shift and go to state 29
    list                           shift and go to state 22
    nextstmt                       shift and go to state 23
    empty                          shift and go to state 24

state 33

    (1) nextstmt -> FOR LBRACKET ID IN NUM COLON NUM RBRACKET LFLOWER NEXT statements RFLOWER .

    $end            reduce using rule 1 (nextstmt -> FOR LBRACKET ID IN NUM COLON NUM RBRACKET LFLOWER NEXT statements RFLOWER .)
    RFLOWER         reduce using rule 1 (nextstmt -> FOR LBRACKET ID IN NUM COLON NUM RBRACKET LFLOWER NEXT statements RFLOWER .)
    ID              reduce using rule 1 (nextstmt -> FOR LBRACKET ID IN NUM COLON NUM RBRACKET LFLOWER NEXT statements RFLOWER .)
    FOR             reduce using rule 1 (nextstmt -> FOR LBRACKET ID IN NUM COLON NUM RBRACKET LFLOWER NEXT statements RFLOWER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 11 resolved as shift
WARNING: shift/reduce conflict for FOR in state 11 resolved as shift
WARNING: shift/reduce conflict for ID in state 13 resolved as shift
WARNING: shift/reduce conflict for FOR in state 13 resolved as shift
WARNING: shift/reduce conflict for ID in state 14 resolved as shift
WARNING: shift/reduce conflict for RFLOWER in state 20 resolved as shift
WARNING: shift/reduce conflict for ID in state 20 resolved as shift
WARNING: shift/reduce conflict for FOR in state 20 resolved as shift
WARNING: shift/reduce conflict for ID in state 27 resolved as shift
WARNING: shift/reduce conflict for FOR in state 27 resolved as shift
WARNING: shift/reduce conflict for ID in state 30 resolved as shift
WARNING: shift/reduce conflict for FOR in state 30 resolved as shift
WARNING: shift/reduce conflict for RFLOWER in state 32 resolved as shift
WARNING: shift/reduce conflict for ID in state 32 resolved as shift
WARNING: shift/reduce conflict for FOR in state 32 resolved as shift
